apply plugin: 'com.android.application'

android {
    compileSdkVersion 19
    buildToolsVersion '25.0.0'

    defaultConfig {
        minSdkVersion 8
        targetSdkVersion 19
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            jniLibs.srcDirs = ['libs']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        androidTest.setRoot('tests')
    }
}

dependencies {
    provided files('../../../lib/build/libs/lib.jar')
//    provided files('external-jars/dl-lib.jar')
    provided files('external-jars/android-support-v4.jar')
}

task beforeBuild(dependsOn: ':lib:buildLib') << {

}

//preBuild.dependsOn beforeBuild
def dlPath = '/sdcard/DynamicLoadHost'
task uploadApk(type: Exec) { arg ->
    workingDir arg.project.projectDir.toString() + '/build/outputs/apk/'
    println 'look the uploadApk' + workingDir
//        commandLine "$adb", 'shell', 'ls', '/sdcard/mysoft'
    commandLine "adb", 'push', arg.project.name + '-debug.apk', dlPath

}
